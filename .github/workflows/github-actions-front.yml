# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI Frontend

on:
  push:
    branches: [ "master" ]
    paths:
      - 'front/**'
      - '.github/workflows/github-actions-front.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'front/**'
      - '.github/workflows/github-actions-front.yml'

permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository  
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-
  
    - name: Build frontend
      working-directory: ./front
      run: npm i &&  npm run build --if-present
    
    - name: Launch tests and generate coverage
      working-directory: ./front
      run: npm test
  
    - name: Debug report generation
      run: ls -la ./front/test-results

    - name: Upload coverage
      uses: phoenix-actions/test-reporting@v8
      with:
        name: Karma Jasmine Tests
        path: front/test-results/test-results.xml
        reporter: java-junit
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./front/coverage/bobapp/lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}
        comment: false
        requires_changes: false
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          projectBaseDir: front/
          args: >
            -Dsonar.scanner.provisionedJre.disable=true 
            -Dsonar.newCode.referenceBranch=master 
            -Dsonar.qualitygate.wait=true
  
  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Extract metadata for tags
        id: meta
        run: |
              SHA_SHORT=$(echo "${GITHUB_SHA}" | cut -c1-7)
              DATE_TAG=$(date +'%Y%m%d')
              VERSION_TAG="v-${DATE_TAG}-${SHA_SHORT}"
              echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
    
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/bobappfrontend:latest
              ${{ secrets.DOCKERHUB_USERNAME }}/bobappfrontend:${{ steps.meta.outputs.version_tag }}

