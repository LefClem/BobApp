# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI Backend

on:
  push:
    branches: [ "master" ]
    paths:
      - 'back/**'
      - '.github/workflows/github-actions-back.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'back/**'
      - '.github/workflows/github-actions-back.yml'

permissions:
  contents: read
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      working-directory: ./back
      run: mvn -B package --file pom.xml
    - name: Test with Maven
      working-directory: ./back
      run: mvn clean test
    - name: Upload test report summary
      uses: phoenix-actions/test-reporting@v8
      with:
          name: Junit Tests
          path: back/target/surefire-reports/*.xml
          reporter: java-junit

  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      
      - name: Extract metadata for tags
        id: meta
        run: |
          SHA_SHORT=$(echo "${GITHUB_SHA}" | cut -c1-7)
          DATE_TAG=$(date +'%Y%m%d')
          VERSION_TAG="v-${DATE_TAG}-${SHA_SHORT}"
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: |
              ${{ secrets.DOCKERHUB_USERNAME }}/bobappbackend:latest
              ${{ secrets.DOCKERHUB_USERNAME }}/bobappbackend:${{ steps.meta.outputs.version_tag }}